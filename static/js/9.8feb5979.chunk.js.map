{"version":3,"sources":["components/auth/Singin/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/validation.ts","components/FormElements/index.tsx","components/auth/Singin/style.module.scss"],"names":["connect","state","error","auth","authData","dispatch","bindActionCreators","deleteError","authActions","regUser","request","React","memo","props","useState","login","setLogin","password","setPassword","useEffect","className","classnames","style","wrapper","onSubmit","e","preventDefault","errors","push","checkLogin","checkLengthInput","indexOf","id","type","labelText","value","onChangeHandler","currentTarget","dataError","name","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","toggleError","isValid","elem","document","querySelector","classList","remove","add","inputValue","minLength","maxLength","setState","isEmail","match","checkPhoto","data","possibleExp","test","addEventListener","elems","querySelectorAll","M","Tooltip","init","onChange","onBlur","onBlurHandler","dataTooltip","data-position","data-tooltip","placeholder","data-length","htmlFor","data-error","data-success","module","exports"],"mappings":"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","file":"static/js/9.8feb5979.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport * as authActions from \"../../../store/auth/actions\";\n\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\nimport Input from \"../../FormElements\";\nimport { IRootState, IRootAction } from \"../../../store/rootReducer\";\nimport { checkLogin, checkLengthInput } from \"../../../services/validation\";\n\nconst mapStateToProps = (state: IRootState) => ({\n  error: state.auth.authData.error,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      deleteError: authActions.deleteError,\n      regUser: authActions.regUser.request,\n    },\n    dispatch\n  );\n\ntype AuthProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nconst Authorization: React.FC<AuthProps> = (props) => {\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const minPassLength = 5;\n\n  React.useEffect(() => {\n    return () => {\n      props.deleteError();\n    };\n  }, []);\n\n  const loginHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setLogin(e.currentTarget.value);\n    checkLogin(\"login\", e.currentTarget.value);\n  };\n\n  const passwordHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setPassword(e.currentTarget.value);\n    checkLengthInput(\n      e.currentTarget.value,\n      \"password\",\n      minPassLength,\n      0,\n      setPassword\n    );\n  };\n\n  const submitHandler = (e: React.FormEvent<Element>) => {\n    e.preventDefault();\n    const errors = [];\n    errors.push(checkLogin(\"login\", login));\n    errors.push(\n      checkLengthInput(password, \"password\", minPassLength, 0, setPassword)\n    );\n    if (errors.indexOf(false) === -1) props.regUser({ login, password });\n  };\n\n  return (\n    <div className={classnames(\"row container\", style.wrapper)}>\n      <h1 className=\"center-align\">Registration</h1>\n      <form className=\"col s6 offset-s3\" onSubmit={submitHandler}>\n        <Input\n          id=\"login\"\n          type=\"text\"\n          labelText=\"Email\"\n          value={login}\n          onChangeHandler={loginHandler}\n          dataError=\"Email should be like this: email@email.com\"\n        />\n        <Input\n          id=\"password\"\n          type=\"password\"\n          labelText=\"Password\"\n          value={password}\n          onChangeHandler={passwordHandler}\n          dataError={\"Not a character of \" + minPassLength + \" characters\"}\n        />\n        {props.error && (\n          <div className=\"card-panel red lighten-3\">{props.error}</div>\n        )}\n        <button\n          className=\"btn waves-effect waves-light\"\n          type=\"submit\"\n          name=\"action\"\n        >\n          Submit\n          <i className=\"material-icons right\">send</i>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Authorization));\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const toggleError = (id: string, isValid: boolean) => {\n  const elem = document.querySelector(`#${id}`);\n  if (isValid) {\n    elem?.classList.remove(\"invalid\");\n    elem?.classList.add(\"valid\");\n    return true;\n  } else {\n    elem?.classList.add(\"invalid\");\n    elem?.classList.remove(\"valid\");\n    return false;\n  }\n};\n\nexport const checkLengthInput = (\n  inputValue: string,\n  id: string,\n  minLength: number,\n  maxLength: number,\n  setState: React.Dispatch<React.SetStateAction<string>>\n) => {\n  if (maxLength) {\n    inputValue.length < maxLength && setState(inputValue);\n  } else {\n    setState(inputValue);\n  }\n  const isValid = !(minLength && inputValue.length < minLength);\n  return toggleError(id, isValid);\n};\n\nexport const checkLogin = (id: string, login: string) => {\n  const isEmail = !!login.match(/^[0-9a-z-&#92;]/i);\n  return toggleError(id, isEmail);\n};\n\nexport const checkPhoto = (data: string) => {\n  const possibleExp = [/jpg/, /jpeg/, /png/, /gif/];\n  for (let i = 0; i < possibleExp.length; i++) {\n    if (possibleExp[i].test(data)) return true;\n  }\n  return false;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\ninterface IProps {\n  type: string;\n  id: string;\n  labelText: string;\n  value: string;\n  onChangeHandler: (e: React.FormEvent<HTMLInputElement>) => void;\n  onBlurHandler?: (id: string, phones: string) => void;\n  dataTooltip?: string;\n  maxLength?: number;\n  dataError?: string;\n}\n\nconst InputTypeText = (props: IProps) => {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    let elems = document.querySelectorAll(\".tooltipped\");\n    M.Tooltip.init(elems, {});\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"input-field col s12\">\n        <input\n          value={props.value}\n          onChange={props.onChangeHandler}\n          onBlur={(e) =>\n            props.onBlurHandler &&\n            props.onBlurHandler(props.id, e.currentTarget.value)\n          }\n          id={props.id}\n          type={props.type}\n          className={classnames(props.dataTooltip ? \"tooltipped\" : \"\")}\n          data-position=\"right\"\n          data-tooltip={props.dataTooltip}\n          placeholder=\"\"\n          data-length={props.maxLength}\n        />\n        <label htmlFor={props.id} className=\"active\">\n          {props.labelText}\n        </label>\n        <span\n          className=\"helper-text\"\n          data-error={props.dataError}\n          data-success=\"Good\"\n        ></span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(InputTypeText);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1Size\":\"style_h1Size__3IEbh\"};"],"sourceRoot":""}