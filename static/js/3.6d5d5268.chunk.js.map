{"version":3,"sources":["components/PostCard/AddMessage/index.tsx","components/PostCard/Comments/Comment/Answer/index.tsx","components/PostCard/Comments/Comment/index.tsx","components/PostCard/Comments/index.tsx","components/PostCard/LikePost/index.tsx","components/PostCard/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/validation.ts","components/NotFound/style.module.scss","components/AddPost/Photo/index.tsx","components/AddPost/Photo/style.module.scss","components/NotFound/index.tsx","components/PostCard/style.module.scss","components/PostCard/AddMessage/style.module.scss","components/PostCard/Comments/style.module.scss","components/PostCard/Comments/Comment/style.module.scss","components/PostCard/Comments/Comment/Answer/style.module.scss"],"names":["connect","state","success","message","failure","dispatch","bindActionCreators","setMessage","actions","request","deleteToastMessage","React","memo","props","useEffect","M","toast","html","classes","useState","text","setText","refPhoto","useRef","id","className","style","header","nick","photoWrapper","Photo","src","messageInput","value","onChange","e","currentTarget","disabled","trim","onClick","userId","setComment","answerClosed","toggle","setToggle","toggleHandler","answerButton","answerWrapper","buttons","answerTo","commentID","sendButton","cancelButton","comment","avatar","alt","author","date","createdAt","answerExist","_id","commentsData","comments","getComments","idPost","commentsWrapper","length","map","d","key","answers","b","answer","setLike","console","log","postID","postCard","postCardData","isPost","getPostCard","deletePostCard","match","params","elems","document","querySelectorAll","Materialbox","init","inDuration","outDuration","Modal","img","images","url","classnames","rowcorrect","sidebarWrapper","userWrapper","to","userAtr","contentWrapper","topPhoto","title","content","userActions","userTriger","messageBtn","href","likesCount","data","postDate","NotFound","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","toggleError","isValid","elem","querySelector","classList","remove","add","checkLengthInput","inputValue","minLength","maxLength","setState","checkLogin","login","isEmail","checkPhoto","possibleExp","test","module","exports","imageUrl","setImageUrl","logoWrapper","inputFileWrapper","action","encType","method","ref","accept","preventDefault","files","file","reader","FileReader","readAsDataURL","onloadend","result","current","reset","getElementById","getInstance","open","type","name","inputFile","htmlFor","notFoundWrapper"],"mappings":"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","file":"static/js/3.6d5d5268.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport { IRootAction, IRootState } from \"../../../store/rootReducer\";\nimport * as actions from \"../../../store/message/actions\";\nimport style from \"./style.module.scss\";\nimport { connect } from \"react-redux\";\nimport Photo from \"../../AddPost/Photo\";\n\ninterface IParentProps {\n  nick: string;\n  userId: string;\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  success: state.message.success,\n  failure: state.message.failure,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      setMessage: actions.setMessage.request,\n      deleteToastMessage: actions.deleteToastMessage,\n    },\n    dispatch\n  );\n\ntype IProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps> &\n  IParentProps;\n\nconst AddMessage = (props: IProps) => {\n  useEffect(() => {\n    props.success && M.toast({ html: props.success, classes: \"green\" });\n    props.failure && M.toast({ html: props.failure, classes: \"red\" });\n    props.deleteToastMessage();\n  }, [props.success, props.failure]);\n\n  const [text, setText] = useState(\"\");\n\n  const refPhoto = useRef<HTMLFormElement | null>(null);\n\n  const sendMessageHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    props.setMessage({ userId: props.userId, text, refPhoto });\n    setText(\"\");\n  };\n\n  const changeTextHandler = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.currentTarget.value);\n  };\n\n  return (\n    <div id=\"modal1\" className=\"modal modal-fixed-footer\">\n      <div className=\"modal-content\">\n        <h4 className={style.header}>Write message{props.nick}</h4>\n        <div className={style.photoWrapper}>\n          <Photo\n            id=\"photo1\"\n            refPhoto={refPhoto}\n            src=\"https://brilliant24.ru/files/cat/bg_template_01.png\"\n          />\n        </div>\n        <textarea\n          className={style.messageInput}\n          value={text}\n          onChange={changeTextHandler}\n        />\n      </div>\n      <div className=\"modal-footer\">\n        <button className=\"modal-close waves-green btn-flat\">Cancel</button>\n        <button\n          disabled={text.trim() ? false : true}\n          className=\"modal-close waves-effect waves-green btn\"\n          onClick={sendMessageHandler}\n        >\n          Direct\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(AddMessage));\n","import React, { useState } from \"react\";\nimport style from \"./style.module.scss\";\nimport { IRootAction } from \"../../../../../store/rootReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport * as actions from \"../../../../../store/comments/actions\";\n\ninterface IAnswer {\n  answerClosed: boolean;\n  commentID: string | null;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      setComment: actions.setComment.request,\n    },\n    dispatch\n  );\n\ntype TProps = ReturnType<typeof mapDispatchToProps> & IAnswer;\n\nconst Answer = (props: TProps) => {\n  const [toggle, setToggle] = useState(props.answerClosed);\n  const [text, setText] = useState(\"\");\n\n  const toggleHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    setToggle(!toggle);\n  };\n\n  const changeTextHandler = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.currentTarget.value);\n  };\n\n  const sendAnswerHandler = () => {\n    props.setComment({ answerTo: props.commentID, text });\n    setToggle(!toggle);\n    setText(\"\");\n  };\n\n  return (\n    <div>\n      {toggle ? (\n        <button onClick={toggleHandler} className={style.answerButton}>\n          Answer\n        </button>\n      ) : (\n        <div className={style.answerWrapper}>\n          <textarea value={text} onChange={changeTextHandler}></textarea>\n          <div className={style.buttons}>\n            <button\n              disabled={text.trim() ? false : true}\n              onClick={sendAnswerHandler}\n              className={style.sendButton}\n            >\n              Send\n            </button>\n            {props.answerClosed && (\n              <button onClick={toggleHandler} className={style.cancelButton}>\n                Cancel\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(React.memo(Answer));\n","import React from \"react\";\nimport style from \"./style.module.scss\";\nimport Answer from \"./Answer\";\n\nexport interface IProps {\n  _id: string;\n  createdAt: string;\n  nick: string;\n  text: string;\n  avatar: string;\n  answerExist: boolean;\n}\n\nconst Comment = (props: IProps) => {\n  return (\n    <div className={style.comment}>\n      <div className={style.header}>\n        {props.avatar !== null ? (\n          <img src={`/${props.avatar}`} alt={props.nick} />\n        ) : (\n          <span className=\"large material-icons black-text\">face</span>\n        )}\n        {/* <img src={`/${props.avatar}`} alt={props.nick} /> */}\n        <span className={style.author}>{props.nick}</span>\n      </div>\n      <p>{props.text}</p>\n      <span className={style.date}>{props.createdAt}</span>\n      {props.answerExist && (\n        <Answer commentID={props._id} answerClosed={true} />\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Comment);\n","import React, { useEffect } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport style from \"./style.module.scss\";\nimport * as actions from \"../../../store/comments/actions\";\nimport { IRootAction, IRootState } from \"../../../store/rootReducer\";\nimport Comment from \"./Comment\";\nimport { connect } from \"react-redux\";\nimport { IGetCommentsSuccess } from \"../../../store/comments/types\";\nimport Answer from \"./Comment/Answer\";\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      getComments: actions.getComments.request,\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IRootState) => ({\n  commentsData: state.comments.commentsData,\n});\ninterface IIdAdv {\n  idPost: string;\n}\ntype TProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps> &\n  IIdAdv;\n\nconst Comments = (props: TProps) => {\n  useEffect(() => {\n    props.getComments({ idPost: props.idPost });\n  }, []);\n\n  const printComments = (commentsData: IGetCommentsSuccess[]) => {\n    return commentsData.map((d: IGetCommentsSuccess) => (\n      <li key={d._id}>\n        <Comment\n          avatar={d.avatar}\n          createdAt={d.createdAt}\n          nick={d.nick}\n          text={d.text}\n          _id={d._id}\n          answerExist={true}\n        />\n        <ul>\n          {d.answers &&\n            d.answers.map((b: IGetCommentsSuccess) => (\n              <li key={b._id}>\n                <Comment\n                  avatar={b.avatar}\n                  createdAt={b.createdAt}\n                  nick={b.nick}\n                  text={b.text}\n                  _id={b._id}\n                  answerExist={false}\n                />\n              </li>\n            ))}\n        </ul>\n      </li>\n    ));\n  };\n\n  return (\n    <div className={style.commentsWrapper}>\n      <h2>Comments</h2>\n      <div className={style.comments}>\n        {!props.commentsData.length && <p>No one has written yet</p>}\n        <ul>{printComments(props.commentsData)}</ul>\n      </div>\n      <div className={style.answer}>\n        <h2>Write commet</h2>\n        <Answer commentID={null} answerClosed={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Comments));\n","import React, { useState } from \"react\";\nimport { IRootAction } from \"../../../store/rootReducer\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport * as actions from \"../../../store/like/actions\";\n\ninterface IAnswer {\n  postID: string | null;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      setLike: actions.setLike.request,\n    },\n    dispatch\n  );\n\ntype TProps = ReturnType<typeof mapDispatchToProps> & IAnswer;\n\nconst LikePost = (props: TProps) => {\n  const [toggle, setToggle] = useState(true);\n  const text = \"\";\n\n  const sendAnswerHandler = () => {\n    console.log(\"send\");\n    setToggle(!toggle);\n    props.setLike({ answerTo: props.postID, text });\n  };\n\n  return (\n    <div>\n      <button onClick={sendAnswerHandler}>\n        {toggle ? (\n          <span className=\"large material-icons black-text\">\n            favorite_border\n          </span>\n        ) : (\n          <span className=\"large material-icons black-text\">favorite</span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(React.memo(LikePost));\n","import React, { useEffect } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport style from \"./style.module.scss\";\nimport classnames from \"classnames\";\nimport * as actions from \"../../store/post/actions\";\nimport { IRootAction, IRootState } from \"../../store/rootReducer\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, Link } from \"react-router-dom\";\nimport NotFound from \"../NotFound\";\nimport Message from \"./AddMessage\";\nimport Comments from \"./Comments\";\nimport LikePost from \"./LikePost\";\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      getPostCard: actions.getPostCard.request,\n      deletePostCard: actions.deletePostCard,\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IRootState) => ({\n  postCard: state.postCard.postCardData,\n  isPost: state.postCard.isPost,\n});\n\ntype TParams = { id: string };\n\ntype TProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps> &\n  RouteComponentProps<TParams>;\n\nconst PostCard = (props: TProps) => {\n  useEffect(() => {\n    props.getPostCard(props.match.params.id);\n    return () => {\n      props.deletePostCard();\n    };\n  }, []);\n\n  useEffect(() => {\n    const elems = document.querySelectorAll(\".materialboxed\");\n    M.Materialbox.init(elems, { inDuration: 0, outDuration: 0 });\n  }, [props.postCard]);\n\n  const elems = document.querySelectorAll(\".modal\");\n  M.Modal.init(elems, {});\n\n  const img =\n    props.postCard.images[0]?.url ||\n    \"https://boatparts.com.ua/design/boatparts/images/no_image.png\";\n\n  if (props.isPost) {\n    return (\n      <div className={classnames(\"row\", style.rowcorrect)}>\n        <div className=\"col m3 s12\">\n          <div className={style.sidebarWrapper}>\n            <div className={style.userWrapper}>\n              <Link to={`/user/${props.postCard.userId}`}>\n                <div className={style.userAtr}>\n                  <div>\n                    <img\n                      alt={props.postCard.nick}\n                      src={props.postCard.avatar}\n                    />\n                  </div>\n                  <div className={style.nick}>\n                    <span>{props.postCard.nick}</span>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <Message nick={props.postCard.nick} userId={props.postCard.userId} />\n        <div className=\"\">\n          <div className={style.contentWrapper}>\n            <div className={style.topPhoto}>\n              <img\n                alt={props.postCard.title}\n                className=\"materialboxed\"\n                src={img}\n              />\n            </div>\n            <div className={style.content}>\n              <div className={style.userActions}>\n                <div className={style.userTriger}>\n                  <LikePost postID={props.match.params.id} />\n                  <a\n                    className={classnames(\"modal-trigger\", style.messageBtn)}\n                    href=\"#modal1\"\n                  >\n                    <i className=\"material-icons right\">send</i>\n                  </a>\n                </div>\n                <div>\n                  <Link\n                    to={`/postlike/${props.postCard._id}`}\n                    className=\"black-text accent-4\"\n                  >\n                    <p>{props.postCard.likesCount} :like</p>\n                  </Link>\n                </div>\n              </div>\n              <p>{props.postCard.title}</p>\n\n              <span className={style.data}>{props.postCard.postDate}</span>\n            </div>\n            <Comments idPost={props.match.params.id} />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <NotFound />;\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(PostCard));\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const toggleError = (id: string, isValid: boolean) => {\n  const elem = document.querySelector(`#${id}`);\n  if (isValid) {\n    elem?.classList.remove(\"invalid\");\n    elem?.classList.add(\"valid\");\n    return true;\n  } else {\n    elem?.classList.add(\"invalid\");\n    elem?.classList.remove(\"valid\");\n    return false;\n  }\n};\n\nexport const checkLengthInput = (\n  inputValue: string,\n  id: string,\n  minLength: number,\n  maxLength: number,\n  setState: React.Dispatch<React.SetStateAction<string>>\n) => {\n  if (maxLength) {\n    inputValue.length < maxLength && setState(inputValue);\n  } else {\n    setState(inputValue);\n  }\n  const isValid = !(minLength && inputValue.length < minLength);\n  return toggleError(id, isValid);\n};\n\nexport const checkLogin = (id: string, login: string) => {\n  const isEmail = !!login.match(/^[0-9a-z-&#92;]/i);\n  return toggleError(id, isEmail);\n};\n\nexport const checkPhoto = (data: string) => {\n  const possibleExp = [/jpg/, /jpeg/, /png/, /gif/];\n  for (let i = 0; i < possibleExp.length; i++) {\n    if (possibleExp[i].test(data)) return true;\n  }\n  return false;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFoundWrapper\":\"style_notFoundWrapper__1eWTd\"};","import React, { useState, RefObject, useEffect } from \"react\";\nimport style from \"./style.module.scss\";\nimport { checkPhoto } from \"../../../services/validation\";\n\ninterface IProps {\n  id: string;\n  refPhoto: RefObject<HTMLFormElement> | undefined | null;\n  src: string;\n}\n\nconst Photo = (props: IProps) => {\n  const [imageUrl, setImageUrl] = useState<string>(\n    \"https://brilliant24.ru/files/cat/bg_template_01.png\"\n  );\n\n  useEffect(() => {\n    props.src && setImageUrl(props.src);\n  }, [props.src]);\n\n  useEffect(() => {\n    const elems = document.querySelectorAll(\".modal\");\n    M.Modal.init(elems, {});\n  }, []);\n\n  const uploadHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    if (e.currentTarget.files) {\n      let file = e.currentTarget.files[0];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        if (\n          reader.result &&\n          typeof reader.result === \"string\" &&\n          checkPhoto(reader.result)\n        ) {\n          setImageUrl(reader.result);\n        } else {\n          props.refPhoto?.current?.reset();\n          const elem: any = document.getElementById(\"modal1\");\n          const instance = M.Modal.getInstance(elem);\n          instance.open();\n        }\n      };\n    }\n  };\n\n  return (\n    <div className={style.logoWrapper}>\n      <img className={style.avatar} src={imageUrl} alt=\"addphoto\" />\n      <div className={style.inputFileWrapper}>\n        <form\n          action=\"/upload\"\n          encType=\"multipart/form-data\"\n          method=\"post\"\n          ref={props.refPhoto}\n        >\n          <input\n            accept=\"image/jpg,image/jpeg,image/png,image/gif\"\n            onChange={uploadHandler}\n            type=\"file\"\n            name=\"photo\"\n            id={props.id}\n            className={style.inputFile}\n          />\n          <label htmlFor={props.id}>\n            <i className=\"material-icons\">add</i>\n          </label>\n        </form>\n      </div>\n      <div id=\"modal1\" className=\"modal\">\n        <div className=\"modal-content\">\n          <p>Photo format is invalid. You can use: jpeg, jpg, png, gif</p>\n        </div>\n        <div className=\"modal-footer\">\n          <a\n            href=\"#!\"\n            className=\"modal-close waves-effect waves-green btn-flat\"\n          >\n            Ok\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Photo);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"style_logoWrapper__1BlIw\",\"avatar\":\"style_avatar__22sB2\",\"inputFileWrapper\":\"style_inputFileWrapper__7kKzs\",\"inputFile\":\"style_inputFile__33tiI\"};","import React from \"react\";\nimport style from \"./style.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div className={style.notFoundWrapper}>\n      <div className=\"row\">\n        <div className=\"col s12 m6 offset-m3\">\n          <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text\">\n              <span className=\"center-align card-title\">404</span>\n            </div>\n            <div className=\"card-action center-align\">\n              <Link to=\"/\">Go to start</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(NotFound);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowcorrect\":\"style_rowcorrect__2HuWZ\",\"contentWrapper\":\"style_contentWrapper__3v6Up\",\"topPhoto\":\"style_topPhoto__2YFQb\",\"content\":\"style_content__32AvO\",\"data\":\"style_data__1Ksmm\",\"description\":\"style_description__3xefx\",\"sidebarWrapper\":\"style_sidebarWrapper__188WZ\",\"price\":\"style_price__1oXYJ\",\"userWrapper\":\"style_userWrapper__3JH0E\",\"nick\":\"style_nick__1CHPG\",\"userData\":\"style_userData__1XUcP\",\"userAtr\":\"style_userAtr__1GX3t\",\"userActions\":\"style_userActions__14i78\",\"userTriger\":\"style_userTriger__1G7yj\",\"messageBtn\":\"style_messageBtn__2Eqjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoWrapper\":\"style_photoWrapper__1AzEz\",\"header\":\"style_header__3lOQL\",\"messageInput\":\"style_messageInput__1GRma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsWrapper\":\"style_commentsWrapper__1Iize\",\"comments\":\"style_comments__3UE6f\",\"answer\":\"style_answer__kjuol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"style_comment__mehY3\",\"header\":\"style_header__19Som\",\"author\":\"style_author__3ANhu\",\"date\":\"style_date__2Zm_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerButton\":\"style_answerButton__-kVHf\",\"answerWrapper\":\"style_answerWrapper__2Qd7G\",\"buttons\":\"style_buttons__3WtaO\",\"sendButton\":\"style_sendButton__3xP9A\",\"cancelButton\":\"style_cancelButton__2RBuo\"};"],"sourceRoot":""}