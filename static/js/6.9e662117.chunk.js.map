{"version":3,"sources":["components/AddPost/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/validation.ts","components/FormElements/index.tsx","components/AddPost/Photo/index.tsx","components/AddPost/Photo/style.module.scss","components/AddPost/style.module.scss"],"names":["connect","state","advData","postCard","postCardData","dispatch","bindActionCreators","addPost","actionsAddAdv","request","getPostCard","actionsAdv","deletePostCard","React","memo","props","useState","title","setTitle","refPhoto1","useRef","useEffect","textNeedCount","document","querySelectorAll","M","CharacterCounter","init","match","params","id","className","style","photoWrapper","refPhoto","src","images","url","onSubmit","e","console","log","refPhotos","errors","push","checkLengthInput","indexOf","oldImages","_id","preventDefault","type","labelText","value","onChangeHandler","currentTarget","maxLength","dataError","name","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","toggleError","isValid","elem","querySelector","classList","remove","add","inputValue","minLength","setState","checkLogin","login","isEmail","checkPhoto","data","possibleExp","test","addEventListener","elems","Tooltip","onChange","onBlur","onBlurHandler","classnames","dataTooltip","data-position","data-tooltip","placeholder","data-length","htmlFor","data-error","data-success","imageUrl","setImageUrl","Modal","logoWrapper","avatar","alt","inputFileWrapper","action","encType","method","ref","accept","files","file","reader","FileReader","readAsDataURL","onloadend","result","current","reset","getElementById","getInstance","open","inputFile","href","module","exports"],"mappings":"sNAwHeA,uBAlGS,SAACC,GAAD,MAAwB,CAC9CC,QAASD,EAAME,SAASC,iBAXC,SAACC,GAAD,OACzBC,6BACE,CACEC,QAASC,IAAsBC,QAC/BC,YAAaC,IAAuBF,QACpCG,eAAgBD,KAElBN,KAqGWL,CAGba,IAAMC,MA5FQ,SAACC,GAAmB,IAAD,IACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,KAG3BC,EAAYC,iBAA+B,MAKjDC,qBAAU,WACR,IAAMC,EAAgBC,SAASC,iBAAiB,UAGhD,OAFAC,EAAEC,iBAAiBC,KAAKL,GACxBP,EAAMa,MAAMC,OAAOC,IAAMf,EAAML,YAAYK,EAAMa,MAAMC,OAAOC,IACvD,WACLf,EAAMH,oBAEP,IAEHS,qBAAU,WACRH,EAASH,EAAMb,QAAQe,SACtB,CAACF,EAAMb,UAEVmB,qBAAU,YACPN,EAAMa,MAAMC,OAAOC,IAAMf,EAAMH,mBAC/B,CAACG,EAAMa,MAAMC,OAAOC,KAiCvB,OACE,yBAAKC,UAAU,OACb,wBAAIA,UAAU,gBAAd,eACA,yBAAKA,UAAWC,IAAMC,cACpB,kBAAC,IAAD,CACEH,GAAG,SACHI,SAAUf,EACVgB,KAAK,UAAApB,EAAMb,QAAQkC,OAAO,UAArB,eAAyBC,MAAO,MAGzC,0BAAMN,UAAU,uBAAuBO,SAzCrB,SAACC,GACrBC,QAAQC,IAAI,QACZ,IAAMC,EAAY,CAACvB,GACbwB,EAAS,GAKf,GAJAA,EAAOC,KACLC,YAAiB5B,EAAO,QAzBL,EACA,GAwB8CC,KAGpC,IAA3ByB,EAAOG,SAAQ,GAAe,CAChC,IAAMC,EAAYhC,EAAMb,QAAQkC,OAASrB,EAAMb,QAAQkC,OAAS,KAC1DY,EAAMjC,EAAMb,QAAQ8C,IAAMjC,EAAMb,QAAQ8C,IAAM,KACpDjC,EAAMR,QAAQ,CACZU,QACAyB,YACAK,YACAC,QAGJT,EAAEU,mBAwBE,kBAAC,IAAD,CACEnB,GAAG,QACHoB,KAAK,OACLC,UAAU,QACVC,MAAOnC,EACPoC,gBA1Ba,SAACd,GACpBM,YACEN,EAAEe,cAAcF,MAChB,QA5CmB,EACA,GA8CnBlC,IAqBIqC,UAnEe,GAoEfC,UAAW,iCAEb,4BACEzB,UAAU,+BACVmB,KAAK,SACLO,KAAK,UAHP,MAME,uBAAG1B,UAAU,wBAAb,gB,4CC7GK,SAAS2B,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKtB,KAAK2B,EAAGnB,QAETQ,GAAKM,EAAKS,SAAWf,GAH8CO,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF,GALtG,mC,gCIAA,0GAAMC,EAAc,SAACjD,EAAYkD,GAC/B,IAAMC,EAAO1D,SAAS2D,cAAT,WAA2BpD,IACxC,OAAIkD,GACE,OAAJC,QAAI,IAAJA,KAAME,UAAUC,OAAO,WACnB,OAAJH,QAAI,IAAJA,KAAME,UAAUE,IAAI,UACb,IAEH,OAAJJ,QAAI,IAAJA,KAAME,UAAUE,IAAI,WAChB,OAAJJ,QAAI,IAAJA,KAAME,UAAUC,OAAO,UAChB,IAIEvC,EAAmB,SAC9ByC,EACAxD,EACAyD,EACAhC,EACAiC,GAEIjC,EACF+B,EAAWX,OAASpB,GAAaiC,EAASF,GAE1CE,EAASF,GAEX,IAAMN,IAAYO,GAAaD,EAAWX,OAASY,GACnD,OAAOR,EAAYjD,EAAIkD,IAGZS,EAAa,SAAC3D,EAAY4D,GACrC,IAAMC,IAAYD,EAAM9D,MAAM,oBAC9B,OAAOmD,EAAYjD,EAAI6D,IAGZC,EAAa,SAACC,GAEzB,IADA,IAAMC,EAAc,CAAC,MAAO,OAAQ,MAAO,OAClClC,EAAI,EAAGA,EAAIkC,EAAYnB,OAAQf,IACtC,GAAIkC,EAAYlC,GAAGmC,KAAKF,GAAO,OAAO,EAExC,OAAO,I,gCCvCT,qCAoDehF,QAAMC,MArCC,SAACC,GAMrB,OALAQ,SAASyE,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQ1E,SAASC,iBAAiB,eACtCC,EAAEyE,QAAQvE,KAAKsE,EAAO,OAItB,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,uBACb,2BACEqB,MAAOrC,EAAMqC,MACb+C,SAAUpF,EAAMsC,gBAChB+C,OAAQ,SAAC7D,GAAD,OACNxB,EAAMsF,eACNtF,EAAMsF,cAActF,EAAMe,GAAIS,EAAEe,cAAcF,QAEhDtB,GAAIf,EAAMe,GACVoB,KAAMnC,EAAMmC,KACZnB,UAAWuE,IAAWvF,EAAMwF,YAAc,aAAe,IACzDC,gBAAc,QACdC,eAAc1F,EAAMwF,YACpBG,YAAY,GACZC,cAAa5F,EAAMwC,YAErB,2BAAOqD,QAAS7F,EAAMe,GAAIC,UAAU,UACjChB,EAAMoC,WAET,0BACEpB,UAAU,cACV8E,aAAY9F,EAAMyC,UAClBsD,eAAa,e,qFC0CRjG,QAAMC,MA7EP,SAACC,GAAmB,IAAD,EACCC,mBAC9B,uDAF6B,mBACxB+F,EADwB,KACdC,EADc,KAK/B3F,qBAAU,WACRN,EAAMoB,KAAO6E,EAAYjG,EAAMoB,OAC9B,CAACpB,EAAMoB,MAEVd,qBAAU,WACR,IAAM4E,EAAQ1E,SAASC,iBAAiB,UACxCC,EAAEwF,MAAMtF,KAAKsE,EAAO,MACnB,IAyBH,OACE,yBAAKlE,UAAWC,IAAMkF,aACpB,yBAAKnF,UAAWC,IAAMmF,OAAQhF,IAAK4E,EAAUK,IAAI,aACjD,yBAAKrF,UAAWC,IAAMqF,kBACpB,0BACEC,OAAO,UACPC,QAAQ,sBACRC,OAAO,OACPC,IAAK1G,EAAMmB,UAEX,2BACEwF,OAAO,2CACPvB,SAnCY,SAAC5D,GAErB,GADAA,EAAEU,iBACEV,EAAEe,cAAcqE,MAAO,CACzB,IAAIC,EAAOrF,EAAEe,cAAcqE,MAAM,GAC7BE,EAAS,IAAIC,WACjBD,EAAOE,cAAcH,GACrBC,EAAOG,UAAY,WACjB,GACEH,EAAOI,QACkB,kBAAlBJ,EAAOI,QACdrC,YAAWiC,EAAOI,QAElBjB,EAAYa,EAAOI,YACd,CAAC,IAAD,IACL,UAAAlH,EAAMmB,gBAAN,mBAAgBgG,eAAhB,SAAyBC,QACzB,IAAMlD,EAAY1D,SAAS6G,eAAe,UACzB3G,EAAEwF,MAAMoB,YAAYpD,GAC5BqD,WAmBPpF,KAAK,OACLO,KAAK,QACL3B,GAAIf,EAAMe,GACVC,UAAWC,IAAMuG,YAEnB,2BAAO3B,QAAS7F,EAAMe,IACpB,uBAAGC,UAAU,kBAAb,UAIN,yBAAKD,GAAG,SAASC,UAAU,SACzB,yBAAKA,UAAU,iBACb,yFAEF,yBAAKA,UAAU,gBACb,uBACEyG,KAAK,KACLzG,UAAU,iDAFZ,a,mBC1EV0G,EAAOC,QAAU,CAAC,YAAc,2BAA2B,OAAS,sBAAsB,iBAAmB,gCAAgC,UAAY,2B,mBCAzJD,EAAOC,QAAU,CAAC,aAAe","file":"static/js/6.9e662117.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Input from \"../FormElements/index\";\nimport * as actionsAddAdv from \"../../store/addPost/actions\";\nimport * as actionsAdv from \"../../store/post/actions\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport { IRootAction, IRootState } from \"../../store/rootReducer\";\nimport { connect } from \"react-redux\";\nimport Photo from \"./Photo\";\nimport style from \"./style.module.scss\";\nimport { checkLengthInput } from \"../../services/validation\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      addPost: actionsAddAdv.addPost.request,\n      getPostCard: actionsAdv.getPostCard.request,\n      deletePostCard: actionsAdv.deletePostCard,\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IRootState) => ({\n  advData: state.postCard.postCardData,\n});\n\ntype TParams = { id: string };\ntype IProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps> &\n  RouteComponentProps<TParams>;\n\nconst AddPost = (props: IProps) => {\n  const [title, setTitle] = useState(\"\");\n\n  const refPhoto1 = useRef<HTMLFormElement | null>(null);\n\n  const minTitleLength = 0;\n  const maxTitleLength = 70;\n\n  useEffect(() => {\n    const textNeedCount = document.querySelectorAll(\"#title\");\n    M.CharacterCounter.init(textNeedCount);\n    props.match.params.id && props.getPostCard(props.match.params.id); // если редактирование то подгружаем данные по объяве\n    return () => {\n      props.deletePostCard();\n    };\n  }, []);\n\n  useEffect(() => {\n    setTitle(props.advData.title);\n  }, [props.advData]);\n\n  useEffect(() => {\n    !props.match.params.id && props.deletePostCard(); // удаляем стейт если с редактирования уходим в создание\n  }, [props.match.params.id]);\n\n  const submitHandler = (e: React.FormEvent<Element>) => {\n    console.log(\"push\");\n    const refPhotos = [refPhoto1];\n    const errors = [];\n    errors.push(\n      checkLengthInput(title, \"title\", minTitleLength, maxTitleLength, setTitle)\n    );\n\n    if (errors.indexOf(false) === -1) {\n      const oldImages = props.advData.images ? props.advData.images : null;\n      const _id = props.advData._id ? props.advData._id : null;\n      props.addPost({\n        title,\n        refPhotos,\n        oldImages,\n        _id,\n      });\n    }\n    e.preventDefault();\n  };\n\n  const titleHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    checkLengthInput(\n      e.currentTarget.value,\n      \"title\",\n      minTitleLength,\n      maxTitleLength,\n      setTitle\n    );\n  };\n\n  return (\n    <div className=\"row\">\n      <h1 className=\"center-align\">Post advert</h1>\n      <div className={style.photoWrapper}>\n        <Photo\n          id=\"photo1\"\n          refPhoto={refPhoto1}\n          src={props.advData.images[0]?.url || \"\"}\n        />\n      </div>\n      <form className=\"col s12 m6 offset-m3\" onSubmit={submitHandler}>\n        <Input\n          id=\"title\"\n          type=\"text\"\n          labelText=\"Title\"\n          value={title}\n          onChangeHandler={titleHandler}\n          maxLength={maxTitleLength}\n          dataError={\"Must be at last \" + minTitleLength + \" characters\"}\n        />\n        <button\n          className=\"btn waves-effect waves-light\"\n          type=\"submit\"\n          name=\"action\"\n        >\n          Add\n          <i className=\"material-icons right\">send</i>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(AddPost));\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const toggleError = (id: string, isValid: boolean) => {\n  const elem = document.querySelector(`#${id}`);\n  if (isValid) {\n    elem?.classList.remove(\"invalid\");\n    elem?.classList.add(\"valid\");\n    return true;\n  } else {\n    elem?.classList.add(\"invalid\");\n    elem?.classList.remove(\"valid\");\n    return false;\n  }\n};\n\nexport const checkLengthInput = (\n  inputValue: string,\n  id: string,\n  minLength: number,\n  maxLength: number,\n  setState: React.Dispatch<React.SetStateAction<string>>\n) => {\n  if (maxLength) {\n    inputValue.length < maxLength && setState(inputValue);\n  } else {\n    setState(inputValue);\n  }\n  const isValid = !(minLength && inputValue.length < minLength);\n  return toggleError(id, isValid);\n};\n\nexport const checkLogin = (id: string, login: string) => {\n  const isEmail = !!login.match(/^[0-9a-z-&#92;]/i);\n  return toggleError(id, isEmail);\n};\n\nexport const checkPhoto = (data: string) => {\n  const possibleExp = [/jpg/, /jpeg/, /png/, /gif/];\n  for (let i = 0; i < possibleExp.length; i++) {\n    if (possibleExp[i].test(data)) return true;\n  }\n  return false;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\ninterface IProps {\n  type: string;\n  id: string;\n  labelText: string;\n  value: string;\n  onChangeHandler: (e: React.FormEvent<HTMLInputElement>) => void;\n  onBlurHandler?: (id: string, phones: string) => void;\n  dataTooltip?: string;\n  maxLength?: number;\n  dataError?: string;\n}\n\nconst InputTypeText = (props: IProps) => {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    let elems = document.querySelectorAll(\".tooltipped\");\n    M.Tooltip.init(elems, {});\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"input-field col s12\">\n        <input\n          value={props.value}\n          onChange={props.onChangeHandler}\n          onBlur={(e) =>\n            props.onBlurHandler &&\n            props.onBlurHandler(props.id, e.currentTarget.value)\n          }\n          id={props.id}\n          type={props.type}\n          className={classnames(props.dataTooltip ? \"tooltipped\" : \"\")}\n          data-position=\"right\"\n          data-tooltip={props.dataTooltip}\n          placeholder=\"\"\n          data-length={props.maxLength}\n        />\n        <label htmlFor={props.id} className=\"active\">\n          {props.labelText}\n        </label>\n        <span\n          className=\"helper-text\"\n          data-error={props.dataError}\n          data-success=\"Good\"\n        ></span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(InputTypeText);\n","import React, { useState, RefObject, useEffect } from \"react\";\nimport style from \"./style.module.scss\";\nimport { checkPhoto } from \"../../../services/validation\";\n\ninterface IProps {\n  id: string;\n  refPhoto: RefObject<HTMLFormElement> | undefined | null;\n  src: string;\n}\n\nconst Photo = (props: IProps) => {\n  const [imageUrl, setImageUrl] = useState<string>(\n    \"https://brilliant24.ru/files/cat/bg_template_01.png\"\n  );\n\n  useEffect(() => {\n    props.src && setImageUrl(props.src);\n  }, [props.src]);\n\n  useEffect(() => {\n    const elems = document.querySelectorAll(\".modal\");\n    M.Modal.init(elems, {});\n  }, []);\n\n  const uploadHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    if (e.currentTarget.files) {\n      let file = e.currentTarget.files[0];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        if (\n          reader.result &&\n          typeof reader.result === \"string\" &&\n          checkPhoto(reader.result)\n        ) {\n          setImageUrl(reader.result);\n        } else {\n          props.refPhoto?.current?.reset();\n          const elem: any = document.getElementById(\"modal1\");\n          const instance = M.Modal.getInstance(elem);\n          instance.open();\n        }\n      };\n    }\n  };\n\n  return (\n    <div className={style.logoWrapper}>\n      <img className={style.avatar} src={imageUrl} alt=\"addphoto\" />\n      <div className={style.inputFileWrapper}>\n        <form\n          action=\"/upload\"\n          encType=\"multipart/form-data\"\n          method=\"post\"\n          ref={props.refPhoto}\n        >\n          <input\n            accept=\"image/jpg,image/jpeg,image/png,image/gif\"\n            onChange={uploadHandler}\n            type=\"file\"\n            name=\"photo\"\n            id={props.id}\n            className={style.inputFile}\n          />\n          <label htmlFor={props.id}>\n            <i className=\"material-icons\">add</i>\n          </label>\n        </form>\n      </div>\n      <div id=\"modal1\" className=\"modal\">\n        <div className=\"modal-content\">\n          <p>Photo format is invalid. You can use: jpeg, jpg, png, gif</p>\n        </div>\n        <div className=\"modal-footer\">\n          <a\n            href=\"#!\"\n            className=\"modal-close waves-effect waves-green btn-flat\"\n          >\n            Ok\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Photo);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"style_logoWrapper__1BlIw\",\"avatar\":\"style_avatar__22sB2\",\"inputFileWrapper\":\"style_inputFileWrapper__7kKzs\",\"inputFile\":\"style_inputFile__33tiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoWrapper\":\"style_photoWrapper__2Xm8x\"};"],"sourceRoot":""}