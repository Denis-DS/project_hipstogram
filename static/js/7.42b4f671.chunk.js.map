{"version":3,"sources":["components/user/Settings/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/validation.ts","components/FormElements/index.tsx","components/user/Avatar/index.tsx","components/user/Avatar/style.module.scss"],"names":["connect","state","id","profile","profileData","_id","login","nick","errorServer","error","success","dispatch","bindActionCreators","getProfile","profileActions","request","setProfile","deleteSuccess","React","memo","props","useState","setLogin","setNick","useEffect","textNeedCount","document","querySelectorAll","M","CharacterCounter","init","idUser","toast","html","classes","className","classnames","style","wrapper","onSubmit","e","errors","push","checkLogin","checkLengthInput","indexOf","preventDefault","type","labelText","value","onChangeHandler","currentTarget","dataError","maxLength","name","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","toggleError","isValid","elem","querySelector","classList","remove","add","inputValue","minLength","setState","isEmail","match","checkPhoto","data","possibleExp","test","addEventListener","elems","Tooltip","onChange","onBlur","onBlurHandler","dataTooltip","data-position","data-tooltip","placeholder","data-length","htmlFor","data-error","data-success","avatar","url","setAvatar","form","useRef","logoWrapper","alt","src","inputFileWrapper","action","encType","method","ref","current","FormData","inputFile","module","exports"],"mappings":"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","file":"static/js/7.42b4f671.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { IRootAction, IRootState } from \"../../../store/rootReducer\";\nimport * as profileActions from \"../../../store/profile/actions\";\nimport { checkLengthInput, checkLogin } from \"../../../services/validation\";\nimport style from \"./style.module.scss\";\nimport Input from \"../../FormElements\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"../Avatar\";\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      getProfile: profileActions.getProfile.request,\n      setProfile: profileActions.setProfile.request,\n      deleteSuccess: profileActions.deleteSuccess,\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IRootState) => ({\n  id: state.profile.profileData._id,\n  login: state.profile.profileData.login,\n  nick: state.profile.profileData.nick,\n  errorServer: state.profile.profileData.error,\n  success: state.profile.profileData.success,\n});\n\ntype IProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps>;\n\nconst Settings: React.FC<IProps> = (props: IProps) => {\n  const [login, setLogin] = useState(\"\");\n  const [nick, setNick] = useState(\"\");\n\n  useEffect(() => {\n    const textNeedCount = document.querySelectorAll(\"#nick\");\n    M.CharacterCounter.init(textNeedCount);\n  }, []);\n\n  useEffect(() => {\n    props.getProfile({ idUser: null });\n    if (!props.id) {\n      props.getProfile({ idUser: null });\n    } else {\n      setLogin(props.login);\n      setNick(props.nick ? props.nick : \"\");\n    }\n\n    if (props.success) {\n      M.toast({ html: props.success, classes: \"green\" });\n      props.deleteSuccess();\n    }\n  }, [props]);\n\n  const minNickLength = 3;\n  const maxNickLength = 20;\n\n  const submitHandler = (e: React.FormEvent<Element>) => {\n    const errors = [];\n    errors.push(checkLogin(\"login\", login));\n    errors.push(\n      checkLengthInput(nick, \"nick\", minNickLength, maxNickLength, setNick)\n    );\n\n    if (errors.indexOf(false) === -1) props.setProfile({ login, nick });\n    e.preventDefault();\n    e.preventDefault();\n  };\n\n  const loginHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setLogin(e.currentTarget.value);\n    checkLogin(\"login\", e.currentTarget.value);\n  };\n\n  const nickHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    checkLengthInput(\n      e.currentTarget.value,\n      \"nick\",\n      minNickLength,\n      maxNickLength,\n      setNick\n    );\n  };\n\n  return (\n    <div className={classnames(\"row\", style.wrapper)}>\n      <h1 className=\"center-align\">Профиль</h1>\n      <Avatar />\n      <form className=\"col s12 m6 offset-m3\" onSubmit={submitHandler}>\n        <Input\n          id=\"login\"\n          type=\"text\"\n          labelText=\"Login\"\n          value={login}\n          onChangeHandler={loginHandler}\n          dataError={\"Login new\"}\n        />\n        <Input\n          id=\"nick\"\n          type=\"text\"\n          labelText=\"Nick\"\n          value={nick}\n          onChangeHandler={nickHandler}\n          maxLength={maxNickLength}\n          dataError={\"No less \" + minNickLength + \" characters\"}\n        />\n\n        {props.errorServer && (\n          <div className=\"card-panel red lighten-3\">{props.errorServer}</div>\n        )}\n        <button\n          className=\"btn waves-effect waves-light\"\n          type=\"submit\"\n          name=\"action\"\n        >\n          Edit\n          <i className=\"material-icons right\">send</i>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Settings));\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const toggleError = (id: string, isValid: boolean) => {\n  const elem = document.querySelector(`#${id}`);\n  if (isValid) {\n    elem?.classList.remove(\"invalid\");\n    elem?.classList.add(\"valid\");\n    return true;\n  } else {\n    elem?.classList.add(\"invalid\");\n    elem?.classList.remove(\"valid\");\n    return false;\n  }\n};\n\nexport const checkLengthInput = (\n  inputValue: string,\n  id: string,\n  minLength: number,\n  maxLength: number,\n  setState: React.Dispatch<React.SetStateAction<string>>\n) => {\n  if (maxLength) {\n    inputValue.length < maxLength && setState(inputValue);\n  } else {\n    setState(inputValue);\n  }\n  const isValid = !(minLength && inputValue.length < minLength);\n  return toggleError(id, isValid);\n};\n\nexport const checkLogin = (id: string, login: string) => {\n  const isEmail = !!login.match(/^[0-9a-z-&#92;]/i);\n  return toggleError(id, isEmail);\n};\n\nexport const checkPhoto = (data: string) => {\n  const possibleExp = [/jpg/, /jpeg/, /png/, /gif/];\n  for (let i = 0; i < possibleExp.length; i++) {\n    if (possibleExp[i].test(data)) return true;\n  }\n  return false;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\n\ninterface IProps {\n  type: string;\n  id: string;\n  labelText: string;\n  value: string;\n  onChangeHandler: (e: React.FormEvent<HTMLInputElement>) => void;\n  onBlurHandler?: (id: string, phones: string) => void;\n  dataTooltip?: string;\n  maxLength?: number;\n  dataError?: string;\n}\n\nconst InputTypeText = (props: IProps) => {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    let elems = document.querySelectorAll(\".tooltipped\");\n    M.Tooltip.init(elems, {});\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"input-field col s12\">\n        <input\n          value={props.value}\n          onChange={props.onChangeHandler}\n          onBlur={(e) =>\n            props.onBlurHandler &&\n            props.onBlurHandler(props.id, e.currentTarget.value)\n          }\n          id={props.id}\n          type={props.type}\n          className={classnames(props.dataTooltip ? \"tooltipped\" : \"\")}\n          data-position=\"right\"\n          data-tooltip={props.dataTooltip}\n          placeholder=\"\"\n          data-length={props.maxLength}\n        />\n        <label htmlFor={props.id} className=\"active\">\n          {props.labelText}\n        </label>\n        <span\n          className=\"helper-text\"\n          data-error={props.dataError}\n          data-success=\"Good\"\n        ></span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(InputTypeText);\n","import React, { useRef } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport style from \"./style.module.scss\";\nimport { IRootState, IRootAction } from \"../../../store/rootReducer\";\nimport { connect } from \"react-redux\";\nimport * as profileActions from \"../../../store/profile/actions\";\n\nconst mapStateToProps = (state: IRootState) => ({\n  avatar: state.profile.profileData.avatar?.url,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      setAvatar: profileActions.setAvatar.request,\n    },\n    dispatch\n  );\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nconst Avatar = (props: Props) => {\n  const form = useRef<HTMLFormElement | null>(null);\n\n  const uploadHandler = () => {\n    form.current && props.setAvatar(new FormData(form.current));\n  };\n\n  const avatar = props.avatar\n    ? `http://hipstagram.asmer.fs.a-level.com.ua/${props.avatar}`\n    : `http://hipstagram.asmer.fs.a-level.com.ua/images/c21cf837580918bd61242a5fb31b84eb`;\n\n  return (\n    <div className={style.logoWrapper}>\n      <img alt=\"logo\" className={style.avatar} src={avatar} />\n      <div className={style.inputFileWrapper}>\n        <form\n          action=\"/upload\"\n          encType=\"multipart/form-data\"\n          method=\"post\"\n          ref={form}\n        >\n          <input\n            onChange={uploadHandler}\n            type=\"file\"\n            name=\"photo\"\n            id=\"photo\"\n            className={style.inputFile}\n          />\n          <label htmlFor=\"photo\">\n            <i className=\"material-icons\">photo_camera</i>\n          </label>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Avatar));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"style_logoWrapper__3Hf-A\",\"avatar\":\"style_avatar__J9dlz\",\"inputFileWrapper\":\"style_inputFileWrapper__2Zvyr\",\"inputFile\":\"style_inputFile__2HMiF\"};"],"sourceRoot":""}