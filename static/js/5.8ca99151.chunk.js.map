{"version":3,"sources":["components/user/Profile/index.tsx","components/Posts/Post/index.tsx","components/Posts/Post/style.module.scss","components/Posts/Sorting/index.tsx","components/user/Avatar/index.tsx","components/user/Avatar/style.module.scss","components/user/Profile/style.module.scss"],"names":["connect","state","id","profile","profileData","_id","login","nick","followers","following","errorServer","error","success","postsData","posts","pagesCount","postsLimit","dispatch","bindActionCreators","getPosts","actions","request","getProfile","profileActions","deleteSuccess","React","memo","props","quest","match","params","q","idUser","useEffect","type","page","className","classnames","style","wrapper","Flex","Info","UserInfo","to","Posts","Post","length","map","d","likesCount","comments","key","title","createdAt","images","PostWraper","src","alt","module","exports","sortType","setPostsLimit","setPostsSort","Fragment","defaultValue","onChange","e","currentTarget","value","Number","avatar","url","setAvatar","form","useRef","logoWrapper","inputFileWrapper","action","encType","method","ref","current","FormData","name","inputFile","htmlFor"],"mappings":"0GAAA,6HAiHeA,uBAzFS,SAACC,GAAD,MAAwB,CAC9CC,GAAID,EAAME,QAAQC,YAAYC,IAC9BC,MAAOL,EAAME,QAAQC,YAAYE,MACjCC,KAAMN,EAAME,QAAQC,YAAYG,KAChCC,UAAWP,EAAME,QAAQC,YAAYI,UACrCC,UAAWR,EAAME,QAAQC,YAAYK,UACrCC,YAAaT,EAAME,QAAQC,YAAYO,MACvCC,QAASX,EAAME,QAAQC,YAAYQ,QACnCC,UAAWZ,EAAMa,MAAMD,UACvBE,WAAYd,EAAMa,MAAMC,WACxBC,WAAYf,EAAMa,MAAME,eApBC,SAACC,GAAD,OACzBC,6BACE,CACEC,SAAUC,IAAiBC,QAC3BC,WAAYC,IAA0BF,QACtCG,cAAeD,KAEjBN,KA4FWjB,CAGbyB,IAAMC,MAzE0B,SAACC,GACjC,IAAMC,EAAQD,EAAME,MAAMC,OAAOC,GAAK,KAEhCC,EAASL,EAAME,MAAMC,OAAO5B,GAclC,OAZA+B,qBAAU,WACRN,EAAML,WAAW,CAAEU,aAIlB,CAACL,EAAME,QAEVI,qBAAU,WAERN,EAAMR,SAAS,CAAEe,KADJ,UACUC,KAZZ,EAYkBP,QAAOI,aACnC,CAACL,EAAME,MAAOF,EAAMX,aAGrB,yBAAKoB,UAAWC,IAAW,MAAOC,IAAMC,UACtC,6BACE,yBAAKH,UAAWE,IAAME,MACpB,6BACE,kBAAC,IAAD,OAEF,yBAAKJ,UAAWE,IAAMG,MACpB,6BACE,wBAAIL,UAAU,gBAAgBT,EAAMrB,QAEtC,yBAAK8B,UAAWE,IAAMI,UACpB,6BAAM,EAAN,WACA,6BACE,kBAAC,IAAD,CAAMN,UAAU,sBAAsBO,GAAG,KACtC,IADH,iBAIF,6BACE,kBAAC,IAAD,CAAMP,UAAU,sBAAsBO,GAAG,KACtC,IADH,oBAOR,yBAAKP,UAAWE,IAAMM,OACpB,kBAAC,IAAD,MACA,yBAAKR,UAAWE,IAAMO,MACnBlB,EAAMd,WAAac,EAAMd,UAAUiC,OAClCnB,EAAMd,UAAUkC,KAAI,SAACC,GAAD,OAClB,kBAAC,IAAD,CACEC,WAAYD,EAAEC,WACdC,SAAUF,EAAEE,SACZC,IAAKH,EAAE3C,IACPA,IAAK2C,EAAE3C,IACP+C,MAAOJ,EAAEI,MACTC,UAAWL,EAAEK,UACbC,OAAQN,EAAEM,YAId,yBAAKlB,UAAU,gBAAf,+CAC+C,c,gCCvG7D,mDAkCeX,QAAMC,MA5BT,SAACC,GACX,OACE,yBAAKS,UAAWE,IAAMiB,YACpB,kBAAC,IAAD,CAAMZ,GAAE,oBAAehB,EAAMtB,MAC3B,yBAAK+B,UAAU,gBACb,yBAAKoB,IAAK7B,EAAM2B,OAAQlB,UAAU,gBAAgBqB,IAAK9B,EAAMyB,QAC7D,yBAAKhB,UAAU,qBACb,4BACE,wBAAIA,UAAU,sBACZ,0BAAMA,UAAU,mBACd,uBAAGA,UAAU,kBAAb,oBAEDT,EAAMsB,YAET,wBAAIb,UAAU,yBACZ,0BAAMA,UAAU,mBACd,uBAAGA,UAAU,kBAAb,iBAEDT,EAAMuB,mB,mBCvBvBQ,EAAOC,QAAU,CAAC,WAAa,4B,qDCD/B,4CAyDe3D,iBAnDS,SAACC,GAAD,MAAwB,CAC9Ce,WAAYf,EAAMa,MAAME,WACxB4C,SAAU3D,EAAMa,MAAM8C,SACtB7C,WAAYd,EAAMa,MAAMC,eAGC,SAACE,GAAD,OACzBC,6BACE,CACE2C,cAAezC,IACf0C,aAAc1C,KAEhBH,KAuCWjB,CAGbyB,IAAMC,MApCQ,SAACC,GAaf,OACE,kBAAC,IAAMoC,SAAP,KACE,yBAAK3B,UAAU,IACb,wCACA,4BACE4B,aAAcrC,EAAMX,WACpBoB,UAAU,kBACV6B,SAnBkB,SAACC,GACK,QAA1BA,EAAEC,cAAcC,MAClBzC,EAAMkC,cAAcQ,OAAOH,EAAEC,cAAcC,QAE3CzC,EAAMkC,cAAc,KAGtBlC,EAAMmC,aAAa,cAGA,CAAC,GAAI,GAAI,GAAI,OAWZf,KAAI,SAACC,GAAD,OAChB,4BAAQG,IAAKH,EAAGoB,MAAOpB,GACpBA,c,gCChDf,6DA2DehD,iBApDS,SAACC,GAAD,YAAwB,CAC9CqE,OAAM,UAAErE,EAAME,QAAQC,YAAYkE,cAA5B,aAAE,EAAkCC,QAGjB,SAACtD,GAAD,OACzBC,6BACE,CACEsD,UAAWjD,IAAyBF,SAEtCJ,KA2CWjB,CAA6CyB,IAAMC,MArCnD,SAACC,GACd,IAAM8C,EAAOC,iBAA+B,MAMtCJ,EAAS3C,EAAM2C,OAAN,oDACkC3C,EAAM2C,QADxC,oFAIf,OACE,yBAAKlC,UAAWE,IAAMqC,aACpB,yBAAKlB,IAAI,OAAOrB,UAAWE,IAAMgC,OAAQd,IAAKc,IAC9C,yBAAKlC,UAAWE,IAAMsC,kBACpB,0BACEC,OAAO,UACPC,QAAQ,sBACRC,OAAO,OACPC,IAAKP,GAEL,2BACER,SAnBY,WACpBQ,EAAKQ,SAAWtD,EAAM6C,UAAU,IAAIU,SAAST,EAAKQ,WAmB1C/C,KAAK,OACLiD,KAAK,QACLjF,GAAG,QACHkC,UAAWE,IAAM8C,YAEnB,2BAAOC,QAAQ,SACb,uBAAGjD,UAAU,kBAAb,yB,mBClDZsB,EAAOC,QAAU,CAAC,YAAc,2BAA2B,OAAS,sBAAsB,iBAAmB,gCAAgC,UAAY,2B,mBCAzJD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,oBAAoB,SAAW,wBAAwB,MAAQ","file":"static/js/5.8ca99151.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { IRootAction, IRootState } from \"../../../store/rootReducer\";\nimport * as profileActions from \"../../../store/profile/actions\";\nimport * as actions from \"../../../store/posts/actions\";\nimport { IPosts } from \"../../../store/posts/types\";\nimport style from \"./style.module.scss\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"../Avatar\";\nimport Post from \"../../Posts/Post\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport Sorting from \"../../Posts/Sorting\";\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      getPosts: actions.getPosts.request,\n      getProfile: profileActions.getProfile.request,\n      deleteSuccess: profileActions.deleteSuccess,\n    },\n    dispatch\n  );\n\nconst mapStateToProps = (state: IRootState) => ({\n  id: state.profile.profileData._id,\n  login: state.profile.profileData.login,\n  nick: state.profile.profileData.nick,\n  followers: state.profile.profileData.followers,\n  following: state.profile.profileData.following,\n  errorServer: state.profile.profileData.error,\n  success: state.profile.profileData.success,\n  postsData: state.posts.postsData,\n  pagesCount: state.posts.pagesCount,\n  postsLimit: state.posts.postsLimit,\n});\n\ntype TParams = { id: string; q: string };\n\ntype IProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps> &\n  RouteComponentProps<TParams>;\n\nconst Profile: React.FC<IProps> = (props: IProps) => {\n  const quest = props.match.params.q || null;\n  const page = 1;\n  const idUser = props.match.params.id;\n\n  useEffect(() => {\n    props.getProfile({ idUser });\n    // if (!props.id) {\n    //   props.getProfile({ idUser: props.match.params.id });\n    // }\n  }, [props.match]);\n\n  useEffect(() => {\n    const type = \"myposts\";\n    props.getPosts({ type, page, quest, idUser });\n  }, [props.match, props.postsLimit]);\n\n  return (\n    <div className={classnames(\"row\", style.wrapper)}>\n      <div>\n        <div className={style.Flex}>\n          <div>\n            <Avatar />\n          </div>\n          <div className={style.Info}>\n            <div>\n              <h1 className=\"center-align\">{props.login}</h1>\n            </div>\n            <div className={style.UserInfo}>\n              <div>{0}: posts</div>\n              <div>\n                <Link className=\"black-text accent-4\" to=\"/\">\n                  {\"0\"} : followers\n                </Link>\n              </div>\n              <div>\n                <Link className=\"black-text accent-4\" to=\"/\">\n                  {\"0\"} : following\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={style.Posts}>\n          <Sorting />\n          <div className={style.Post}>\n            {props.postsData && props.postsData.length ? (\n              props.postsData.map((d: IPosts) => (\n                <Post\n                  likesCount={d.likesCount}\n                  comments={d.comments}\n                  key={d._id}\n                  _id={d._id}\n                  title={d.title}\n                  createdAt={d.createdAt}\n                  images={d.images}\n                />\n              ))\n            ) : (\n              <div className=\"center-align\">\n                The results were not found for your request.{\" \"}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Profile));\n","import React from \"react\";\nimport style from \"./style.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { IPosts } from \"../../../store/posts/types\";\nimport \"./ImageBox.scss\";\n\nconst Adv = (props: IPosts) => {\n  return (\n    <div className={style.PostWraper}>\n      <Link to={`/postcard/${props._id}`}>\n        <div className=\"gallery-item\">\n          <img src={props.images} className=\"gallery-image\" alt={props.title} />\n          <div className=\"gallery-item-info\">\n            <ul>\n              <li className=\"gallery-item-likes\">\n                <span className=\"visually-hidden\">\n                  <i className=\"material-icons\">favorite_border</i>\n                </span>\n                {props.likesCount}\n              </li>\n              <li className=\"gallery-item-comments\">\n                <span className=\"visually-hidden\">\n                  <i className=\"material-icons\">mode_comment</i>\n                </span>\n                {props.comments}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default React.memo(Adv);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostWraper\":\"style_PostWraper__31n86\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/posts/actions\";\nimport { IRootState, IRootAction } from \"../../../store/rootReducer\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nconst mapStateToProps = (state: IRootState) => ({\n  postsLimit: state.posts.postsLimit,\n  sortType: state.posts.sortType,\n  pagesCount: state.posts.pagesCount,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      setPostsLimit: actions.setPostsLimit,\n      setPostsSort: actions.setPostsSort,\n    },\n    dispatch\n  );\n\ntype IProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps>;\n\nconst Sorting = (props: IProps) => {\n  const postsLimitHandler = (e: React.FormEvent<HTMLSelectElement>) => {\n    if (e.currentTarget.value !== \"All\") {\n      props.setPostsLimit(Number(e.currentTarget.value));\n    } else {\n      props.setPostsLimit(300);\n    }\n\n    props.setPostsSort(\"dateDesc\");\n  };\n\n  const advsLimitArr = [12, 30, 60, \"All\"];\n\n  return (\n    <React.Fragment>\n      <div className=\"\">\n        <label>Posts</label>\n        <select\n          defaultValue={props.postsLimit}\n          className=\"browser-default\"\n          onChange={postsLimitHandler}\n        >\n          {advsLimitArr.map((d) => (\n            <option key={d} value={d}>\n              {d}\n            </option>\n          ))}\n        </select>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(Sorting));\n","import React, { useRef } from \"react\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport style from \"./style.module.scss\";\nimport { IRootState, IRootAction } from \"../../../store/rootReducer\";\nimport { connect } from \"react-redux\";\nimport * as profileActions from \"../../../store/profile/actions\";\n\nconst mapStateToProps = (state: IRootState) => ({\n  avatar: state.profile.profileData.avatar?.url,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<IRootAction>) =>\n  bindActionCreators(\n    {\n      setAvatar: profileActions.setAvatar.request,\n    },\n    dispatch\n  );\n\ntype Props = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nconst Avatar = (props: Props) => {\n  const form = useRef<HTMLFormElement | null>(null);\n\n  const uploadHandler = () => {\n    form.current && props.setAvatar(new FormData(form.current));\n  };\n\n  const avatar = props.avatar\n    ? `http://hipstagram.asmer.fs.a-level.com.ua/${props.avatar}`\n    : `http://hipstagram.asmer.fs.a-level.com.ua/images/c21cf837580918bd61242a5fb31b84eb`;\n\n  return (\n    <div className={style.logoWrapper}>\n      <img alt=\"logo\" className={style.avatar} src={avatar} />\n      <div className={style.inputFileWrapper}>\n        <form\n          action=\"/upload\"\n          encType=\"multipart/form-data\"\n          method=\"post\"\n          ref={form}\n        >\n          <input\n            onChange={uploadHandler}\n            type=\"file\"\n            name=\"photo\"\n            id=\"photo\"\n            className={style.inputFile}\n          />\n          <label htmlFor=\"photo\">\n            <i className=\"material-icons\">photo_camera</i>\n          </label>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Avatar));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"style_logoWrapper__3Hf-A\",\"avatar\":\"style_avatar__J9dlz\",\"inputFileWrapper\":\"style_inputFileWrapper__2Zvyr\",\"inputFile\":\"style_inputFile__2HMiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"style_Post__E1QZk\",\"Flex\":\"style_Flex__3_5c8\",\"Info\":\"style_Info__1h42B\",\"UserInfo\":\"style_UserInfo__22ZjX\",\"Posts\":\"style_Posts__Ccasg\"};"],"sourceRoot":""}